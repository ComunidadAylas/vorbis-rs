[package]
name = "aotuv_lancer_vorbis_sys"
description = "Low-level FFI bindings for libvorbis, vorbisfile, and libvorbisenc C libraries with the aoTuV and Lancer patches"
authors.workspace = true
license.workspace = true
version = "0.1.4"
readme = "../../README.md"
repository.workspace = true
documentation = "https://docs.rs/aotuv_lancer_vorbis_sys"
edition.workspace = true
links = "vorbis"
rust-version.workspace = true
keywords = ["libvorbis", "vorbisfile", "libvorbisenc", "aotuv", "lancer"]
categories = [
  "external-ffi-bindings",
  "multimedia",
  "multimedia::audio",
  "multimedia::encoding",
]
exclude = [
  "/ogg_vendor/**/.*",
  "/ogg_vendor/cmake",
  "/ogg_vendor/doc",
  "/ogg_vendor/win32",
  "/ogg_vendor/README.md",
  "/ogg_vendor/**/*.ac",
  "/ogg_vendor/**/*.m4",
  "/ogg_vendor/**/*.in",
  "/ogg_vendor/**/*.am",
  "/vorbis_vendor/**/.*",
  "/vorbis_vendor/cmake",
  "/vorbis_vendor/doc",
  "/vorbis_vendor/win32",
  "/vorbis_vendor/test/**/*",
  "/vorbis_vendor/README.md",
  "/vorbis_vendor/**/*.ac",
  "/vorbis_vendor/**/*.m4",
  "/vorbis_vendor/**/*.in",
  "/vorbis_vendor/**/*.am",
  "/src/*.ogg",
]

[dependencies]
ogg_next_sys.workspace = true

[build-dependencies]
cc.workspace = true
bindgen = { workspace = true, optional = true }

[features]
# Requires Clang and slows down the build, but guarantees that the bindings are tailored for the platform and up to date.
# It is usually better to run the generate-bindings.sh script instead
build-time-bindgen = ["dep:bindgen"]
